generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                  String          @id @unique @default(uuid()) @db.Uuid
  createdAt           DateTime        @default(now()) @db.Timestamp(6)
  updatedAt           DateTime        @updatedAt @db.Timestamp(6)
  email               String          @unique @db.VarChar(80)
  phoneNumber         String          @unique @db.VarChar(15)
  userName            String          @db.VarChar(80)
  active              Boolean         @default(false)
  code                Int             @unique
  password            String?         @db.VarChar(255)
  resetPasswordToken  String?         @db.VarChar(255)
  resetPasswordSentAt DateTime?
  rememberCreateAt    DateTime?
  lastPasswordUpdate  DateTime?       @db.Timestamp(6)
  passwordExpiration  DateTime?       @db.Timestamp(6)
  failedLoginAttempts Int?            @default(0)
  lockoutTime         DateTime?
  createdBy           String?         @unique @db.Uuid
  UserTokenCode       UserTokenCode[] // Relacionamento de um para muitos com várias UserTokenCode.
  UserTokenAuth       UserTokenAuth[] // Relacionamento de um para muitos com várias UserTokenAuth.

  @@index([email, code, phoneNumber])
  @@map("users")
}

model UserTokenCode {
  id        String   @id @unique @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  expiresAt DateTime
  userId    String   @unique @db.Uuid
  tokenCode String   @unique
  isUsed    Boolean  @default(false)
  user      user     @relation(fields: [userId], references: [id]) // Relacionamento com a entidade User.

  @@index([userId, tokenCode])
  @@map("user_token_codes")
}

model UserTokenAuth {
  id           String   @id @unique @default(uuid()) @db.Uuid
  createdAt    DateTime @default(now())
  expiresAt    DateTime
  userId       String   @unique @db.Uuid
  accessToken  String?  @unique @db.Uuid
  refreshToken String?  @unique @db.Uuid
  revoked      Boolean  @default(false)
  ipAddress    String?  @db.VarChar(45)
  deviceId     String?  @db.VarChar(255)
  deviceType   String?  @db.VarChar(50)

  user user @relation(fields: [userId], references: [id]) // Relacionamento com a entidade User.

  @@map("user_tokers")
}
